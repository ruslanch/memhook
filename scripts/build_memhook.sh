#!/bin/bash

if [ -z "$SCRIPT_ROOT" ]; then
  SCRIPT_ROOT="$(readlink -f `dirname $0`)"
fi

. "$SCRIPT_ROOT/functions.sh"
. "$SCRIPT_ROOT/variables.sh"

pushd "$BUILD_ROOT"

if [ -z "$MEMHOOK_BUILD_TYPE" ]; then
  MEMHOOK_BUILD_TYPE=Debug
fi


if [ -z "$MEMHOOK_ROOT" ]; then
  MEMHOOK_ROOT="$(readlink -f $SCRIPT_ROOT/..)"
fi

if [ ! -d "$MEMHOOK_BUILD_ROOT" ]; then
  mk_dir "$MEMHOOK_BUILD_ROOT"
fi

pushd "$MEMHOOK_BUILD_ROOT"

if [ -n "$TOOLCHAIN_HOST" ]; then
    cat <<EOF >./toolchain.cmake
SET(TOOLCHAIN_HOST $TOOLCHAIN_HOST)
SET(TOOLCHAIN_ROOT $TOOLCHAIN_ROOT)
SET(CMAKE_SYSTEM_PROCESSOR $TOOLCHAIN_ARCH)
SET(CMAKE_SYSTEM_NAME    Linux)
SET(CMAKE_SYSTEM_VERSION 2.6.18)
SET(CMAKE_C_COMPILER   ${TOOLCHAIN_HOST}-gcc)
SET(CMAKE_CXX_COMPILER ${TOOLCHAIN_HOST}-g++)
SET(CMAKE_FIND_ROOT_PATH $TOOLCHAIN_ROOT $BUILD_ROOT)
SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
EOF
    MEMHOOK_CMAKE_ARGS=-DCMAKE_TOOLCHAIN_FILE=./toolchain.cmake
fi

# -DLIBUNWIND_ROOT="$LIBUNWIND_BUILD_ROOT" \

cmake -GNinja $MEMHOOK_ROOT $MEMHOOK_CMAKE_ARGS \
    -DBOOST_ROOT="$BOOST_BUILD_ROOT" \
    -DBOOST_VERSION=$BOOST_VERSION \
    -DLIBUNWIND_ROOT="$LIBUNWIND_BUILD_ROOT" \
    -DCMAKE_BUILD_TYPE=$MEMHOOK_BUILD_TYPE && ninja

popd # MEMHOOK_BUILD_ROOT
popd # BUILD_ROOT
